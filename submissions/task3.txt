ADVANTAGES

1. Randoop automatically generates a huge number of test cases
2. Randoop gives a quick way to get an overview of how well your code handles most inputs
3. Randoop works really well for test cases with basic inputs
4. The auto-generated tests covers most of the branches after writing additional methods on REString.java and Wrapper.java (a wrapper class for the matches function)
5. Randoop is fairly simple to use and generates tests quickly


DISADVANTAGES

1. Without creating the additional REString and Wrapper classes, the auto-generated tests have no variety and has very little coverage
2. The auto-generated test cases do not cover non-basic inputs (due to the nature of the non-basic inputs, they are not generated by the additional methods on the Wrapper class)
3. Randoop generates a huge file containing all the tests with less than meaningful variable and function names which makes the test cases very difficult to understand
4. The regular expressions have a large range of inputs, causing the auto-generated tests not having a high coverage
5. Running Randoop can sometimes cause an infinite loop (even on a project that builds successfully) without any meaningful errors or warnings that are useful for debugging
